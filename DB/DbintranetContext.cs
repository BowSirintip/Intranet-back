// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using RestAPIDemo;

#nullable disable

namespace RestAPIDemo.DB
{
    public partial class DbintranetContext : DbContext
    {
        public DbintranetContext()
        {
        }

        public DbintranetContext(DbContextOptions<DbintranetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<department> department { get; set; }
        public virtual DbSet<employees> employees { get; set; }
        public virtual DbSet<galleryMain> galleryMain { get; set; }
        public virtual DbSet<gallerySub> gallerySub { get; set; }
        public virtual DbSet<group> group { get; set; }
        public virtual DbSet<menu> menu { get; set; }
        public virtual DbSet<news> news { get; set; }
        public virtual DbSet<questions> questions { get; set; }
        public virtual DbSet<register> register { get; set; }
        public virtual DbSet<topicGallary> topicGallary { get; set; }
        public virtual DbSet<uploadFileKM> uploadFileKM { get; set; }
        public virtual DbSet<uploadFileMenu> uploadFileMenu { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Thai_CI_AS");

            modelBuilder.Entity<department>(entity =>
            {
                entity.Property(e => e.created_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.dep_description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.dep_name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<employees>(entity =>
            {
                entity.Property(e => e.created_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.picPath).IsUnicode(false);

                entity.Property(e => e.status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_date).HasColumnType("datetime");

                entity.Property(e => e.userAD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.regis)
                    .WithMany(p => p.employees)
                    .HasForeignKey(d => d.regisID)
                    .HasConstraintName("FK_employees_register");
            });

            modelBuilder.Entity<galleryMain>(entity =>
            {
                entity.Property(e => e.created_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<gallerySub>(entity =>
            {
                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.imgSub_Path).IsUnicode(false);
            });

            modelBuilder.Entity<group>(entity =>
            {
                entity.Property(e => e.created_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.updated_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<menu>(entity =>
            {
                entity.Property(e => e.created_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<news>(entity =>
            {
                entity.Property(e => e.created_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.imagePath).IsUnicode(false);

                entity.Property(e => e.videoPath).IsUnicode(false);
            });

            modelBuilder.Entity<questions>(entity =>
            {
                entity.Property(e => e.answers).IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.questions1)
                    .IsUnicode(false)
                    .HasColumnName("questions");

                entity.Property(e => e.subject)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.update_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<register>(entity =>
            {
                entity.Property(e => e.confirm_password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_by)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.updated_date).HasColumnType("datetime");

                entity.Property(e => e.username)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<topicGallary>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<uploadFileKM>(entity =>
            {
                entity.Property(e => e.created_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<uploadFileMenu>(entity =>
            {
                entity.Property(e => e.created_date).HasColumnType("datetime");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("server=NB03035110082;database=DBIntranet;trusted_connection=true;");
            }
        }
    }
}